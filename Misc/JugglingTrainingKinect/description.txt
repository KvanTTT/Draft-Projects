1. Я постараюсь решить проблему повсеместного распространения жонглирования. Практика жонглирования улучшает координацию, чувство ритма, равновесия, связь между зрительными и моторными отделами головного мозга (источник), увеличивает объем серого и белого вещества головного мозга. Но обычное, не интерактивное, жонглирование не очень интересно и мало эффективно. Поэтому и появилась идея создания интерактивного репетитора.

2. Мое приложение будет называться "Репетитор жонглирования". Для того, чтобы приступить к тренировке, пользователь должен выбрать определенное упражнение, встать перед контроллером и начать жонглирование. Каждое упражнение имеет примерно следующий вид: "Исполнить трюк полукаскад 50 раз. Допустима одна ошибка". Программа будет распознавать трюки и следить за выполнением. При этом, если пользователь выполняет данное упражнение, для него становятся доступны другие упражнения с более сложными трюками, большим количеством повторов, меньшим количеством ошибок, а также с различными комбинациями трюков. Благодаря тому, что приложение будет содержать большое количество упражнения различной сложности, оно будет охватывать достаточно большую аудиторию и практически любой пользователь сможет его использовать. В долгосрочной перспективе, в приложение можно добавить возможность проведения соревнований через интернет и систему рейтингов.

3. Мое приложение будет инновационным, поскольку будет охватывать такие сферы, как "жонглирование", "обучение" и "игровой контроллер kinect", которые еще никто не пытался совместить. Среди приложений kinect, есть приложения, связанные с жонглированием, но они разрабатывались скорее не с целью обучения, а с целью развлечения, поскольку в них нужно жонглировать не настоящими предметами, а виртуальными.

4. Я планирую использовать свободную библиотеку машинного зрения OpenCV (лицензия BSD, http://opencv.willowgarage.com) для распознавания положения мячиков в пространстве. В качестве оболочки для языка C#, я буду использовать библиотеку EmguCV (под лицензией GPL, http://sourceforge.net/projects/emgucv/). Также я буду использовать свободную библиотеку Juggling Lab (GPL, http://jugglinglab.sourceforge.net/) для генерации и получениях необходимых паттернов жонглирования.

5. Процесс работы системы можно разбить на несколько этапов: отслеживание шаров, распознавание паттернов жонглирования и расчет актуальных для пользователя упражнений. Также следует учесть, что система должна работать в реальном времени с минимальной задержкой. 

Для отслеживания шаров и рук пользователя, будет применяться Blob detection алгоритм из OpenCV. В качестве входных данных на данном этапе использутеся информация, полученная из сенсора глубины контроллера kinect. После этого происходит построение диаграммы состояний всех мячей, как это показано на рисунках ниже. Входными данными на этом этапе является информация о бросках и отлове шаров левой или правой рукой. Полученная диаграмма состояний сравнивается с диаграммами состояний, хранящимися в базе знаний и на основе этого делается вывод о том, какой трюк пользователь выполнил в данный момент (или допустил ошибку и уронил все шары). Если же система обнаруживает, что пользователь делает что-то не то, она оповещает пользователя о неверных действиях и процесс выполнения упражнения останавливается.

6. Для того, чтобы начать пользоваться приложением, пользователю необходимо выучить как минимум имена трюков и их исполнение. Но чтобы процесс обучения был как можно более легким, пользователю сначала нужно будет выполнить упражнения с одним, затем с двумя, далее с тремя шарами. Все трюки и упражнения сопровождены подробными схемами выполнения, так что даже начинающий сможет разобраться в приложении. Также программа будет учитывать такие характеристики, как возраст, количество ошибок при исполнении упражнений, скорость выполнения и др., для того, чтобы предоставлять только актуальные упражнения, а не слишком легкие или сложные. Трюки с 4 и более шарами являются сложными, так что они не будут доступны начинающему пользователю долгое время. Если пользователь долгое время не может выполнить трюк, то система даунгрейдид его рейтинг и нужно заново выполнить более легкие упражнения.

7. Если бы я сделал видео о данном приложении, то сначала бы я показал процесс работы системы со стороны: слева - жонглирующий пользователь, а справа - контроллер кинект и монитор. Далее я бы акцентировал внимание на том, что же отображается на мониторе во время исполнения упражнения. А это отображение пользователя, позиций шаров, которыми он жонглирует, а также отображение реальных и идеальных траектории шаров для заданного трюка. Также на дисплее отображается процесс выполнения упражнения в процентах и другая статистика (количество ошибок, темп, ритмичность). После этого, я бы указал, что еще есть в данном приложении в офлайн режиме (не во время выполнения упражнения): это рейтинг пользователя, его достижения: не только выполненные упражнения, но и "рекорды" или бонусы (например "Выполнил трюк каскад 1000 раз за 7 минут"). Далее я бы показал, что с помощью данного приложения можно участвовать в интернет соревнованиях с удаленными пользователями по всему миру. В конце моей видео-презентации я бы освятил технические особенности разработанного приложения, а именно используемые методы и алгоритмы, а также библиотеки и фреймворки. 



